ggsave('../Output/plots/ACE across approches.png', width = 8, height = 4)
gr <- data.frame('Approach' = c('Linear','Hajek','Doubly robust'), 'ACE' = c(-0.00987,-0.00420, -0.00327), 'sd' = c(0.00972, 0.00379,0.0128))
ggplot(gr, aes(x=Approach, y=`ACE`, colour=Approach)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 0),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/ACE across approches.png', width = 8, height = 4)
gr <- data.frame('Approach' = c('Linear','Hajek','Doubly robust'), 'ACE' = c(-0.00987,-0.00420, -0.00327), 'sd' = c(0.00972, 0.00379,0.0128))
ggplot(gr, aes(x=Approach, y=`ACE`)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 0),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/ACE across approches.png', width = 8, height = 4)
gr <- data.frame('Approach' = c('Linear','Hajek','Doubly robust'), 'ACE' = c(-0.00987,-0.004703695, -0.00327), 'sd' = c(0.00972, 0.00379, 0.01275676))
ggplot(gr, aes(x=Approach, y=`ACE`)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 0),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/ACE across approches.png', width = 8, height = 4)
gr <- data.frame('Approach' = c('Linear','Hajek','Doubly robust'), 'ACE' = c(-0.00987,-0.00420, -0.004703695), 'sd' = c(0.00972, 0.00379, 0.01275676))
ggplot(gr, aes(x=Approach, y=`ACE`)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 0),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/ACE across approches.png', width = 8, height = 4)
ggplot(bl[c(2,22,23,24,25),], aes(x=covariates, y=coef)) +
geom_errorbar(aes(ymin=coef-1.96*sd, ymax=coef+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 30),
text=element_text(size = 14, family = 'serif', color = 'black'))
bl[c(12,13,14,15,16,17,  5,)]
bl[c(12,13,14,15,16,17,  5,),]
ggplot(bl[c(12,13,14,15,16,17, 5),], aes(x=covariates, y=coef)) +
geom_errorbar(aes(ymin=coef-1.96*sd, ymax=coef+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 30),
text=element_text(size = 14, family = 'serif', color = 'black'))
bl[c(2,5,10,22,23,24,25),]
ggplot(bl[c(2,22,23,24,25),], aes(x=covariates, y=coef)) +
geom_errorbar(aes(ymin=coef-1.96*sd, ymax=coef+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 30),
text=element_text(size = 14, family = 'serif', color = 'black'))
ggplot(bl[c(2,22,23,24,25),], aes(x=covariates, y=coef)) +
geom_errorbar(aes(ymin=coef-1.96*sd, ymax=coef+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 30),
text=element_text(size = 14, family = 'serif', color = 'black'))
ggsave('../Output/plots/balance check1.png', width = 8, height = 3)
ggplot(bl[c(2,22,23,24,25),], aes(x=covariates, y=coef)) +
geom_errorbar(aes(ymin=coef-1.96*sd, ymax=coef+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 30),
text=element_text(size = 14, family = 'serif', color = 'black'))
ggsave('../Output/plots/balance check2.png', width = 8, height = 3)
ggplot(bl[c(2,22,23,24,25),], aes(x=covariates, y=coef)) +
geom_errorbar(aes(ymin=coef-1.96*sd, ymax=coef+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 30),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Boostrap result') +
geom_point()
ggsave('../Output/plots/balance check2.png', width = 8, height = 3)
knitr::opts_chunk$set(echo = TRUE)
dr <- function(data) {
# outcome
Z = data$MaskMandateLeastNonvax
Y = data$growth30
ols <- lm(growth30~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2
, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = Y_head + Z*res/pscore
outcome0 = Y_head + (1-Z)*res/(1-pscore)
tau = mean(outcome1 - outcome0)
return(outcome1, outcome0, tau)
}
library(doParallel)
library(snow)
workers = makeCluster(4, type = 'SOCK')
registerDoParallel(workers)
n.sample = nrow(data)
boot.est = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,])})
library(randomForest)
library(gmodels)
library(ggplot2)
dr <- function(data) {
# outcome
Z = data$MaskMandateLeastNonvax
Y = data$growth30
ols <- lm(growth30~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2
, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = Y_head + Z*res/pscore
outcome0 = Y_head + (1-Z)*res/(1-pscore)
tau = mean(outcome1 - outcome0)
return(outcome1, outcome0, tau)
}
library(doParallel)
library(snow)
workers = makeCluster(4, type = 'SOCK')
registerDoParallel(workers)
n.sample = nrow(data)
boot.est = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,])})
dr <- function(data) {
# outcome
Z = data$MaskMandateLeastNonvax
Y = data$growth30
ols <- lm(growth30~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2
, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = Y_head + Z*res/pscore
outcome0 = Y_head + (1-Z)*res/(1-pscore)
tau = mean(outcome1 - outcome0)
return(c(outcome1, outcome0, tau))
}
library(doParallel)
library(snow)
workers = makeCluster(4, type = 'SOCK')
registerDoParallel(workers)
n.sample = nrow(data)
boot.est = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,])})
boot.est
data.frame(boot.est)
apply(boot.est, 1, mean)
apply(boot.est, 2, mean)
apply(na.omit(boot.est), 1, mean)
boot.est
dr <- function(data) {
# outcome
Z = data$MaskMandateLeastNonvax
Y = data$growth30
ols <- lm(growth30~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2
, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = Y_head + res/pscore
outcome0 = Y_head + res/(1-pscore)
tau = mean(outcome1 - outcome0)
return(c(outcome1, outcome0, tau))
}
library(doParallel)
library(snow)
workers = makeCluster(4, type = 'SOCK')
registerDoParallel(workers)
n.sample = nrow(data)
boot.est = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,])})
boot.est
apply(boot.est,1,mean)
boot.est[[1]]
boot.est[1]
dim(boot.est)
apply(boot.est, 1, sd)
dr(data)
dr <- function(data) {
# outcome
Z = data$MaskMandateLeastNonvax
Y = data$growth30
ols <- lm(growth30~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2
, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = Y_head + res/pscore
outcome0 = Y_head + res/(1-pscore)
tau = mean(outcome1 - outcome0)
return(c(outcome1, outcome0, tau))
}
library(doParallel)
library(snow)
workers = makeCluster(4, type = 'SOCK')
registerDoParallel(workers)
n.sample = nrow(data)
boot.est = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,])})
dr(data)
dr <- function(data) {
# outcome
Z = data$MaskMandateLeastNonvax
Y = data$growth30
ols <- lm(growth30~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2
, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = mean(Y_head + Z*res/pscore)
outcome0 = mean(Y_head + (1-Z)*res/(1-pscore))
tau = mean(outcome1 - outcome0)
return(c(outcome1, outcome0, tau))
}
library(doParallel)
library(snow)
workers = makeCluster(4, type = 'SOCK')
registerDoParallel(workers)
n.sample = nrow(data)
boot.est = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,])})
dr(data)
apply(boot.est, 1, sd)
apply(na.omit(boot.est), 1, sd)
boot.est
apply(na.omit(boot.est), 1, sd)
data.frame(boot.est)
na.omit(data.frame(boot.est))
na.omit(data.frame(boot.est), 2)
apply(boot.est, na.omit)
apply(boot.est, 2, na.omit)
apply(boot.est, 1, na.omit)
apply(apply(boot.est, 1, na.omit), 1, sd)
apply(boot.est, 1, na.omit)
boot.est[-99]
boot.est[,-c(99)]
apply(boot.est[,-c(99)], 1, sd)
dr <- function(data, delay) {
outcome <- paste('growth', delay, sep='')
# outcome
Z = data$MaskMandateLeastNonvax
Y = data[, outcome]
f <- paste(outcome, '~ MaskMandateLeastNonvax +
medAge + over65pct +
pplpovpct +
asianpct + blkafrpct +
ppl_density +
`Republican leading 2020` +
X8.18.21death +
fullvaxrate7 +
mobility0825dim1 + mobility0825dim2', sep='')
ols <- lm(formula = f, data = data)
Y_head = predict(ols, data)
res = Y - Y_head
# pscore
#ps_head <- list()
#for (i in 1:1000) {
rf <- randomForest(data.matrix(data[,covariates[-c(1:5)]]), y = as.factor(data$MaskMandateLeastNonvax), na.action = na.omit)
#  ps_head[[i]] <- pmax(rf$votes[,2], 0.05)
#}
# doubly robust
#pscore <- apply(data.frame(ps_head), mean, MARGIN = c(1))
pscore <- pmax(rf$votes[,2], 0.05)
#outcome1 = predict(ols, data[data$MaskMandateLeastNonvax==1, ])
#outcome0 = predict(ols, data[data$MaskMandateLeastNonvax==0, ])
#tau = mean(outcome1 - outcome0) + mean(Z*res/pscore - (1-Z)*res/(1-pscore))
#return(tau)
outcome1 = mean(Y_head + Z*res/pscore)
outcome0 = mean(Y_head + (1-Z)*res/(1-pscore))
tau = mean(outcome1 - outcome0)
return(c(outcome1, outcome0, tau))
}
point.30 <- dr(data, 30)
boot.30 = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,], 30)})
point.30
boot.30
apply(boot.30[,-c(454)], 1, sd)
boot.30[,-c(454)]
apply(boot.30[,-c(454, 101)], 1, sd)
apply(boot.30[,-c(454, 101)], 1, sd)
point.30
point.14 <- dr(data, 14)
boot.14 = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,], 14)})
point.14
boot.14
apply(boot.14[,-c(231)], 1, sd)
boot.14
which(is.na(oot.14))
which(is.na(boot.14))
boot.14
apply(boot.14[,-c(231,227,293)], 1, sd)
point.7 <- dr(data, 7)
boot.7 = replicate(500,
{id.boot = sample(1:n.sample, n.sample, replace = TRUE)
dr(data = data[id.boot,], 7)})
boot.7
apply(boot.7[,-c(328, 393, 349, 365)], 1, sd)
boot.7
apply(boot.7[,-c(73,328, 393, 349, 365)], 1, sd)
boot.7
apply(boot.7[,-c(73,328, 393, 349, 365, 424)], 1, sd)
apply(boot.7[,-c(73,328, 393, 349, 365, 424)], 1, sd)
point.7
apply(boot.14[,-c(231,227,293)], 1, sd)
point.14
apply(boot.30[,-c(454, 101)], 1, sd)
point.30
se.7 <- apply(boot.7[,-c(73,328, 393, 349, 365, 424)], 1, sd)
point.7
point.7 - 1.96 * se.7
point.7 + 1.96 * se.7
se.14 <- apply(boot.14[,-c(231,227,293)], 1, sd)
point.14
point.14 - 1.96 * se.14
point.14 + 1.96 * se.14
se.30 <- apply(boot.30[,-c(454, 101)], 1, sd)
point.30
point.30 - 1.96 * se.30
point.30 + 1.96 * se.30
se.7
se.14
se.30
point.7/se.7
point.14se.14
point.14/se.14
point.30se.30
point.30/se.30
point.7/se.7
point.14/se.14
point.30/se.30
c(point.7, point.14)
c(point.7[c(1,2)], point.14[c(1,2)])
gr <- data.frame('day' = c(7,7,14,14,30,30), 'ACE' = c(point.7[c(1,2)], point.14[c(1,2)], point.30[c(1,2)]), 'sd' = c(se.7[c(1,2)], se.14[c(1,2)], se.30[c(1,2)]), 'Group' = c('treatment', 'control', 'treatment', 'control', 'treatment', 'control'))
ggplot(gr, aes(x=day, y=ACE, group = Group, colour = Group)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 45),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
gr <- data.frame('day' = c(7,7,14,14,30,30), 'Outcome' = c(point.7[c(1,2)], point.14[c(1,2)], point.30[c(1,2)]), 'sd' = c(se.7[c(1,2)], se.14[c(1,2)], se.30[c(1,2)]), 'Group' = c('treatment', 'control', 'treatment', 'control', 'treatment', 'control'))
ggplot(gr, aes(x=day, y=ACE, group = Group, colour = Group)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 45),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'Growth Rate',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
gr <- data.frame('day' = c(7,7,14,14,30,30), 'Outcome' = c(point.7[c(1,2)], point.14[c(1,2)], point.30[c(1,2)]), 'sd' = c(se.7[c(1,2)], se.14[c(1,2)], se.30[c(1,2)]), 'Group' = c('treatment', 'control', 'treatment', 'control', 'treatment', 'control'))
ggplot(gr, aes(x=day, y=Outcome, group = Group, colour = Group)) +
geom_errorbar(aes(ymin=Outcome-1.96*sd, ymax=Outcome+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 45),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'Growth Rate',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/Growth rate across days.png', width = 8, height = 4)
gr <- data.frame('day' = c(7,14,30), 'ACE' = c(point.7[c(3)], point.14[c(3)], point.30[c(3)]), 'sd' = 'sd' = c(se.7[c(3)], se.14[c(3)], se.30[c(3)]))
gr <- data.frame('day' = c(7,14,30), 'ACE' = c(point.7[c(3)], point.14[c(3)], point.30[c(3)]),  'sd' = c(se.7[c(3)], se.14[c(3)], se.30[c(3)]))
ggplot(gr, aes(x=day, y=ACE)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 45),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/ACE across days.png', width = 8, height = 4)
point.14
se.14
point.14
se.14
gr <- data.frame('Approach' = c('Linear','Hajek','Doubly robust'), 'ACE' = c(-0.00987,-0.00420, -0.00537), 'sd' = c(0.00972, 0.00379, 0.00406))
ggplot(gr, aes(x=Approach, y=`ACE`)) +
geom_errorbar(aes(ymin=ACE-1.96*sd, ymax=ACE+1.96*sd), width=.3) +
theme(axis.text.x = element_text(angle = 0),
text=element_text(size = 14, family = 'serif', color = 'black')) +
labs(y = 'ACE',
title = 'Influence of mask mandate') +
geom_line() +
geom_point()
ggsave('../Output/plots/ACE across approches.png', width = 8, height = 4)
