"0","```r
loc2013 <- overlap_area[overlap_area$year == 2013,] %>% merge(allvar2015, by = 'GEOID') %>%
  # Calculate weighted value
  mutate(
    PopH = Pop * pctbgH, PopQ = Pop * pctbgQ, PopT = Pop * pctbgT,
    WhiteH = White * pctbgH, WhiteQ = White * pctbgQ, WhiteT = White * pctbgT,
    TransComH = TransCom * pctbgH, TransComQ = TransCom * pctbgQ, TransComT = TransCom * pctbgT,
    WalkComH = WalkCom * pctbgH, WalkComQ = WalkCom * pctbgQ, WalkComT = WalkCom * pctbgT,
    HseHldH = HseHld * pctbgH, HseHldQ = HseHld * pctbgQ, HseHldT = HseHld * pctbgT,
    EmpPopH = EmpPop * pctbgH, EmpPopQ = EmpPop * pctbgQ, EmpPopT = EmpPop * pctbgT,
    HighEduH = HighEdu * pctbgH, HighEduQ = HighEdu * pctbgQ, HighEduT = HighEdu * pctbgT,
    NoVehH = NoVeh * pctbgH, NoVehQ = NoVeh * pctbgQ, NoVehT = NoVeh * pctbgT,
    Pop25H = Pop25 * pctbgH, Pop25Q = Pop25 * pctbgQ, Pop25T = Pop25 * pctbgT,
    UnitsH = Units * pctbgH, UnitsQ = Units * pctbgQ, UnitsT = Units * pctbgT,
  ) 


loc2013 <- aggregate(c(loc2013[,17:46]), by = list(loc2013$count_id), FUN='sum') %>% dplyr::rename(ID = Group.1)

loc2013$WhitePctH <- loc2013$WhiteH/loc2013$PopH
loc2013$WhitePctQ <- loc2013$WhiteQ/loc2013$PopQ
loc2013$WhitePctT <- loc2013$WhiteT/loc2013$PopT

loc2013$TransComPctH <- loc2013$TransComH/loc2013$EmpPopH
loc2013$TransComPctQ <- loc2013$TransComQ/loc2013$EmpPopQ
loc2013$TransComPctT <- loc2013$TransComT/loc2013$EmpPopT

loc2013$WalkComPctH <- loc2013$WalkComH/loc2013$EmpPopH
loc2013$WalkComPctQ <- loc2013$WalkComQ/loc2013$EmpPopQ
loc2013$WalkComPctT <- loc2013$WalkComT/loc2013$EmpPopT

loc2013$HighEduPctH <- loc2013$HighEduH/loc2013$Pop25H
loc2013$HighEduPctQ <- loc2013$HighEduQ/loc2013$Pop25Q
loc2013$HighEduPctT <- loc2013$HighEduT/loc2013$Pop25T

loc2013$NoVehPctH <- loc2013$NoVehH/loc2013$UnitsH
loc2013$NoVehPctQ <- loc2013$NoVehQ/loc2013$UnitsQ
loc2013$NoVehPctT <- loc2013$NoVehT/loc2013$UnitsT
```"
